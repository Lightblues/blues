# =========================================================
# 启动: docker-compose up -d
# 重启: docker-compose restart    # 在不指定name的时候才能使用!
# 停止: docker-compose down
# 访问: http://127.0.0.1:${CHATGPT_NEXT_WEB_PORT}
# see https://github.com/ChatGPTNextWeb/ChatGPT-Next-Web/blob/main/docker-compose.yml


version: '3'
services:
  chatgpt-next-web:
    # profiles: [ "proxy" ]
    container_name: chatgpt-next-web
    image: yidadaa/chatgpt-next-web
    ports:
      - "${CHATGPT_NEXT_WEB_PORT}:3000"
    # network_mode: host
    environment:
      # https://platform.openai.com/api-keys | NextWeb
      # OpenAI的API Key
      - OPENAI_API_KEY=${OPENAI_API_KEY_1}
      - BASE_URL=${OPENAI_BASE_URL}
      # 服务的密码
      - CODE=${CHATGPT_NEXT_WEB_CODE}
      # NOTE: 为了让容器内的应用能够访问到宿主机的网络，需要设置代理
      # 1. 用host上的代理
      - HTTP_PROXY="http://host.docker.internal:${HOST_PROXY_PORT}"
      - HTTPS_PROXY="http://host.docker.internal:${HOST_PROXY_PORT}"
      # 2. 用docker启动clash
      # - PROXY_URL=http://clash:${CLASH_PORT}     # ChatGPTNextWeb 用到的一个奇怪环境变量?
      # - HTTP_PROXY=http://clash:${CLASH_PORT}
      # - HTTPS_PROXY=http://clash:${CLASH_PORT}
      - NO_PROXY="localhost,127.0.0.1,.mydomain.com"

    networks:
      - shared_network
networks:
  shared_network:
    external: true